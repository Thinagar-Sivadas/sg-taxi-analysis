services:
  development:
    build:
      context: .
      dockerfile: dockerfile/development.Dockerfile
    ports:
      - 8888:8888
    command:
      - bash
      - -c
      - |
        jupyter notebook --ip 0.0.0.0 --no-browser --allow-root --port 8888 --NotebookApp.token='' --NotebookApp.password=''
    environment:
      JAVA_HOME: /opt/bitnami/java
      SPARK_HOME: /opt/bitnami/spark
    volumes:
      - .:/app
      - bitnami-spark:/opt/bitnami
  spark-master:
    build:
      context: .
      dockerfile: dockerfile/spark.Dockerfile
    command: bin/spark-class org.apache.spark.deploy.master.Master
    ports:
      - '8081:8080'
      - '4040:4040'
      - '7077:7077'
    volumes:
      - bitnami-spark:/opt/bitnami
      - ./spark_service/log4j2.properties:/opt/bitnami/spark/conf/log4j2.properties:ro
      - ./spark_service/spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf:ro
  spark-worker:
    build:
      context: .
      dockerfile: dockerfile/spark.Dockerfile
    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://spark-master:7077
    depends_on:
      - spark-master
    environment:
      SPARK_MODE: worker
      SPARK_WORKER_CORES: 2
      SPARK_WORKER_MEMORY: 2g
      SPARK_MASTER_URL: spark://spark-master:7077
      SPARK_HOME: /opt/bitnami/spark
    volumes:
      - bitnami-spark:/opt/bitnami
      - ./spark_service/log4j2.properties:/opt/bitnami/spark/conf/log4j2.properties:ro
      - ./spark_service/spark-defaults.conf:/opt/bitnami/spark/conf/spark-defaults.conf:ro
  dagster-data-pipeline:
    build:
      context: .
      dockerfile: dockerfile/dagster.Dockerfile
    environment:
      DAGSTER_HOME: /app/orchestration
      JAVA_HOME: /opt/bitnami/java
      SPARK_HOME: /opt/bitnami/spark
    command:
      - bash
      - -c
      - |
        dagster dev -h 0.0.0.0 -p 3000
    volumes:
      - ./dagster_service/orchestration/:/app/orchestration/
      - ./dagster_service/data_pipeline/:/app/data_pipeline/
      - bitnami-spark:/opt/bitnami
    ports:
      - 3000:3000
    depends_on:
      - minio-datalake
      - postgres-db
      - redpanda
  minio-datalake:
    image: bitnami/minio:latest
    ports:
      - 9001:9001
      - 9000:9000
    volumes:
      - ./datalake_service:/bitnami/minio/data
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
      MINIO_DEFAULT_BUCKETS: raw,bronze,silver,gold
  postgres-db:
    build:
      context: .
      dockerfile: dockerfile/postgres.Dockerfile
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: taxi
    ports:
      - 5432:5432
    volumes:
      - ./postgres_service:/var/lib/postgresql/data
  postgres-ui:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - 5050:80
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres-db
  redpanda:
    image: docker.redpanda.com/redpandadata/redpanda:v24.1.6
    command:
      - redpanda
      - start
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      - --advertise-kafka-addr internal://redpanda:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      - --advertise-pandaproxy-addr internal://redpanda:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      - --rpc-addr redpanda:33145
      - --advertise-rpc-addr redpanda:33145
      - --mode dev-container
      - --smp 1
      - --default-log-level=info
    volumes:
      - ./redpanda_service:/var/lib/redpanda/data
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
      - 19644:9644
  redpanda-console:
    image: docker.redpanda.com/redpandadata/console:v2.6.0
    entrypoint: /bin/sh
    command: -c 'echo "$$CONSOLE_CONFIG_FILE" > /tmp/config.yml; /app/console'
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["redpanda:9092"]
          schemaRegistry:
            enabled: true
            urls: ["http://redpanda:8081"]
        redpanda:
          adminApi:
            enabled: true
            urls: ["http://redpanda:9644"]
    ports:
      - 8080:8080
    depends_on:
      - redpanda

volumes:
  pgadmin-data:
  postgres_service:
  redpanda_service:
  bitnami-spark:
